// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// Professional schema for scalable social app

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  profile   Profile?
  posts     Post[]
}

model Profile {
  id                 String   @id @default(uuid())
  user               User     @relation(fields: [userId], references: [id])
  userId             String   @unique
  name               String
  surname            String
  username           String   @unique
  avatarId           String?
  avatar             File?    @relation("ProfileAvatar", fields: [avatarId], references: [id])
  telegram           String?
  instagram          String?
  description        String?
  lastUsernameChange DateTime @default(now())
}

model Post {
  id          String   @id @default(uuid())
  author      User     @relation(fields: [authorId], references: [id])
  authorId    String
  imageId     String?
  image       File?    @relation("PostImage", fields: [imageId], references: [id])
  createdAt   DateTime @default(now())
  description String?
}

model File {
  id            String    @id @default(uuid())
  url           String
  createdAt     DateTime  @default(now())
  avatarProfile Profile[] @relation("ProfileAvatar")
  imagePosts    Post[]    @relation("PostImage")
}
